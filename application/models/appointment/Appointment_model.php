<?php/*  * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */class Appointment_model extends CI_Model {        public function get_doctor(){                 $arr = "doc.doctor_id as doc_id,doc.doc_name as doc_name,c.city_name";        $this->db->select($arr);        $this->db->from("doctor_list doc");//        $this->db->join("srm_dealer_master sm" , "cl.s_id=sm.id");//        $this->db->join("dealer s" , "s.dealer_id=cl.s_id","right outer");        $this->db->join("state st" , "doc.state_id=st.state_id");        $this->db->join("city c" , "doc.city_id=c.city_id");                $query = $this->db->get();//         echo $this->db->last_query(); die;         if($this->db->affected_rows()){                        return json_encode($query->result_array());        }        else{                        return FALSE;        }                    }        public function add_appointment($data,$ap_id=''){        //        pr($data); die;         if(!empty($data['doa']) || !empty($data['ap_time']) || !empty($data['ap_time_end'])){       $doa = date('Y-m-d', strtotime($data['doa']));       $ap_time = date('H:i:s', strtotime($data['ap_time']));       $ap_time_end = date('H:i:s', strtotime($data['ap_time_end']));        }        else{            $doa=NULL;        }                  if($ap_id !=''){   // for update and appointment             if($data['as']!=0){                 $color = "#00a65a";             }             else{                 $color="#f56954";             }             $appointment_data =                 array(//                    'd_id'=>$data['contact_id'],                    'doa'=>$doa,                   'reason_to_meet'=>$data['reason'],                    'toa'=>$ap_time,                    'toa_end'=>$ap_time_end,                     'crm_user_id'=> logged_user_data(),                   'last_update'=>savedate(),                                        'status'=>$data['as'],                     'color_id'=>$color,                                   );              $this->db->where('d_id',$ap_id);           $this->db->update('pharma_appointment',$appointment_data);//            echo $this->db->last_query(); die;                    if ($this->db->trans_status() === TRUE)                           {                              return true;                           }                           else{                               return false;                           }           }else{  // for add the appointment                  $appointment_data =                 array(                    'd_id'=>$data['person_id'],                    'doa'=>$doa,                     'toa'=>$ap_time,                    'toa_end'=>$ap_time_end,                   'reason_to_meet'=>$data['reason'],                     'crm_user_id'=> logged_user_data(),                    'create_date'=>savedate(),                    'last_update'=>savedate(),                      'status'=>1,                     'color_id'=>'#f56954',                                   );                            $this->db->insert('pharma_appointment',$appointment_data);                                  return ($this->db->affected_rows() != 1) ? false : true;         }    }        // function for get appointment data and show details on calender     public function ap_info(){                 $cities_are = logged_user_cities();         $city_id=explode(',', $cities_are);                                   $res_dealer=$this->ap_dealer_info();                $res_pharmacy=$this->ap_pharmacy_info();                $result = array();        $arr="ap.d_id as ap_person_id,doc.doc_name as title,ap.reason_to_meet,ap.doa as start,ap.toa,ap.id,ap.toa_end,ap.color_id";        $this->db->select($arr);        $this->db->from('pharma_appointment ap');        $this->db->join('doctor_list doc','doc.doctor_id=ap.d_id');                 if(!is_admin()){  // this condition is not for admin user                 if(!empty($cities_are)){               foreach($city_id as $value){          $this->db->or_where('doc.city_id',$value);            }           }                    }                  $query = $this->db->get();//         echo $this->db->last_query(); die;         if($this->db->affected_rows() || !empty($res_dealer) || !empty($res_pharmacy)){             $res=$query->result_array();//             pr($res_dealer);//             echo "<br> contact list";//             pr($res); die;             foreach($res as $k=>$val){ // for doctor appointment                $url= '<a href="appoint/edit_appointment/'. urisafeencode($val['ap_person_id']).'" class="btn btn-outline pull-left">Edit Appointment';                $url2= '<a href="appoint/add_appointment_interaction/'. urisafeencode($val['ap_person_id']).'" class="btn btn-outline pull-left">Add Interaction';                 $result[] = array(						'title'=>$val['title'],						'start'=>$val['start'].' '.$val['toa'],                                                 'end'=>$val['start'].' '.$val['toa_end'],                                                 'backgroundColor'=>$val['color_id'],						'description'=>$val['reason_to_meet'],                                                'time' =>$val['toa'],                                                  'endtime'=>$val['toa_end'],                                                 'link'=>$url,                                                 'link2'=>$url2,                                                 'id'=>$val['ap_person_id'],					);                                               }             if(!empty($res_dealer)){  // for dealer appointment                                                   foreach($res_dealer as $ks=>$vals){                                      $url= '<a href="appoint/edit_appointment/'. urisafeencode($vals['id']).'" class="btn btn-outline pull-left">Edit Appointment';                $url2= '<a href="appoint/add_appointment_interaction/'. urisafeencode($vals['ap_dealerid']).'" class="btn btn-outline pull-left">Add Interaction';                  $result[] = array(						'title'=>$vals['d_title'],						'start'=>$vals['start'].' '.$vals['toa'],                                                 'end'=>$vals['start'].' '.$vals['toa_end'],                                                 'backgroundColor'=>$vals['color_id'],						'description'=>$vals['reason_to_meet'],                                                'time' =>$vals['toa'],                                                  'endtime'=>$vals['toa_end'],                                                 'link'=>$url,                                                  'link2'=>$url2,                                                 'id'=>$vals['ap_dealerid'],					);                                               }                              }                           if(!empty($res_pharmacy)){  // for pharmacy appointment                                                   foreach($res_pharmacy as $ks=>$vals){                                      $url= '<a href="appoint/edit_appointment/'. urisafeencode($vals['id']).'" class="btn btn-outline pull-left">Edit Appointment';                $url2= '<a href="appoint/add_appointment_interaction/'. urisafeencode($vals['ap_pharmaid']).'" class="btn btn-outline pull-left">Add Interaction';                  $result[] = array(						'title'=>$vals['d_title'],						'start'=>$vals['start'].' '.$vals['toa'],                                                 'end'=>$vals['start'].' '.$vals['toa_end'],                                                 'backgroundColor'=>$vals['color_id'],						'description'=>$vals['reason_to_meet'],                                                'time' =>$vals['toa'],                                                  'endtime'=>$vals['toa_end'],                                                 'link'=>$url,                                                  'link2'=>$url2,                                                 'id'=>$vals['ap_pharmaid'],					);                                               }                              }             //            pr($result); die;            return json_encode($result);        }        else{                        return FALSE;        }            }        // appointment of dealerpublic function ap_dealer_info(){      $cities_are = logged_user_cities();         $city_id=explode(',', $cities_are);                $arr=" ap.d_id as ap_dealerid,d.dealer_name as d_title,ap.reason_to_meet,ap.doa as start,ap.toa,ap.id,ap.toa_end,ap.color_id";        $this->db->select($arr);        $this->db->from('pharma_appointment ap');        $this->db->join('dealer d','d.dealer_id=ap.d_id');               if(!is_admin()){  // this condition is not for admin user        if(!empty($cities_are)){               foreach($city_id as $value){          $this->db->or_where('d.city_id',$value);            }           }         }        $query = $this->db->get();//         echo $this->db->last_query(); die;         if($this->db->affected_rows()){                        return $query->result_array();        }        else{                        return FALSE;        }               }     // appointment of pharmacy  public function ap_pharmacy_info(){      $cities_are = logged_user_cities();         $city_id=explode(',', $cities_are);                $arr=" ap.d_id as ap_pharmaid,pl.company_name as d_title,ap.reason_to_meet,ap.doa as start,ap.toa,ap.id,ap.toa_end,ap.color_id";        $this->db->select($arr);        $this->db->from('pharma_appointment ap');        $this->db->join('pharmacy_list pl','pl.pharma_id=ap.d_id');               if(!is_admin()){  // this condition is not for admin user                if(!empty($cities_are)){               foreach($city_id as $value){          $this->db->or_where('pl.city_id',$value);            }           }                   }                $query = $this->db->get();//         echo $this->db->last_query(); die;         if($this->db->affected_rows()){                        return $query->result_array();        }        else{                        return FALSE;        }               }    // edit date and time    public function edit_appointment($ap_id){        //        echo $ap_id; die;        $arr = "ap.d_id,ap.doa,ap.toa,ap.toa_end,doc.doc_name as c_name,ap.reason_to_meet,doc.d_id as dealers_id";        $this->db->select($arr);        $this->db->from("pharma_appointment ap");        $this->db->join("doctor_list doc" , "doc.doctor_id=ap.d_id");//         $this->db->join("dealer s" , "s.dealer_id=ap.d_id");//        $this->db->join("srm_dealer_master sm" , "cl.s_id=sm.id");//        $this->db->join("dealer s" , "s.dealer_id=cl.s_id");                $this->db->where("ap.d_id",$ap_id);                          $query = $this->db->get();//         echo $this->db->last_query();  die;         $res=$query->row();        if(!empty($res)){   // check if this row is empty it means no d_id match on contact list         if($this->db->affected_rows()){                        return json_encode($query->row());        }        else{                        return FALSE;        }        }        else{ // for try to match d_id with dealer                        return $this->edit_appointment_dealer($ap_id);                           }                    }        // fetch data of dealer with appointment    public function edit_appointment_dealer($ap_id){                  $arr = "ap.d_id,ap.doa,ap.toa,ap.toa_end,s.dealer_name as c_name,s.dealer_name,ap.reason_to_meet";        $this->db->select($arr);        $this->db->from("pharma_appointment ap");//        $this->db->join("doctor_list cl" , "cl.contact_id=ap.d_id");         $this->db->join("dealer s" , "s.dealer_id=ap.d_id");//        $this->db->join("srm_dealer_master sm" , "cl.s_id=sm.id");//        $this->db->join("dealer s" , "s.dealer_id=cl.s_id");                $this->db->where("ap.id",$ap_id);                          $query = $this->db->get();//         echo $this->db->last_query();  die;        if($this->db->affected_rows()){                        return json_encode($query->row());        }        else{                        return $this->edit_appointment_pharmacy($ap_id);        }            }            // fetch data of pharmacy with appointment    public function edit_appointment_pharmacy($ap_id){                  $arr = "ap.d_id,ap.doa,ap.toa,ap.toa_end,pl.company_name as c_name,pl.company_name,ap.reason_to_meet";        $this->db->select($arr);        $this->db->from("pharma_appointment ap");//        $this->db->join("doctor_list cl" , "cl.contact_id=ap.d_id");         $this->db->join("pharmacy_list pl" , "pl.pharma_id=ap.d_id");//        $this->db->join("srm_dealer_master sm" , "cl.s_id=sm.id");//        $this->db->join("dealer s" , "s.dealer_id=cl.s_id");                $this->db->where("ap.id",$ap_id);                          $query = $this->db->get();//         echo $this->db->last_query();  die;        if($this->db->affected_rows()){                        return json_encode($query->row());        }        else{                        return false;        }            }       }?>